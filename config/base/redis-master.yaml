apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-serviceaccount
  namespace: default
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels: 
    k8s-app: redis
spec:
  serviceName: redis-cluster
  replicas: 6
  selector:
    matchLabels:
      k8s-app: redis
  template:
    metadata:
      labels:
        k8s-app: redis
    spec:
      serviceAccountName: redis-serviceaccount
      volumes:
      - name: data
        emptyDir: {}
      - name: podinfo
        downwardAPI:
          items:
            - path: "labels"
              fieldRef:
                fieldPath: metadata.labels
            - path: "annotations"
              fieldRef:
                fieldPath: metadata.annotations
            - path: "pod_name"
              fieldRef:
                fieldPath: metadata.name
            - path: "pod_namespace"
              fieldRef:
                fieldPath: metadata.namespace
      containers:
      - name: redis
        image: registry.gitlab.com/aasmall/dicemagic/redis:latest
        ports:
        # - containerPort: 6379
        #   hostPort: 6379
        # - containerPort: 16379
        #   hostPort: 16379
        volumeMounts:
        - mountPath: /data
          name: data
          readOnly: false
        - name: podinfo
          mountPath: /etc/podinfo
          readOnly: false
        env:
        - name: LOCAL_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        envFrom:
        - configMapRef:
            name: redis-config
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        # Mark a node as down if Redis server stops running
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
---
#
# Redis Cluster service
#
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "false"
  name: redis-cluster
  labels:
    k8s-app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  selector:
    k8s-app: redis
